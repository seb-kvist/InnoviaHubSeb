import React, { useEffect } from "react";
import "../styles/IoT.css";
import SensorCard from "../components/SensorCard";

/**
 * IoT-sida f√∂r att visa sensorer och IoT-data fr√•n Innovia Hub
 * 
 * Denna sida visar olika typer av sensorer som:
 * - Temperatur- och luftkvalitetssensorer i m√∂tesrum
 * - R√∂relsesensorer i coworkingytor  
 * - Elf√∂rbrukningsm√§tare per resurs
 * - AI-server f√∂r bokningsbara ber√§kningstj√§nster
 * - S√§kerhetsrelaterade sensorer i serverhall och poddstudio
 */

const IoT: React.FC = () => {
  // TODO: Implementera API-anrop n√§r Sensor-API √§r tillg√§ngligt
  useEffect(() => {
    // Placeholder f√∂r framtida API-integration
    // const fetchSensorData = async () => {
    //   try {
    //     const response = await fetch('/api/sensors');
    //     const data = await response.json();
    //     setSensorData(data);
    //   } catch (error) {
    //     console.error('Fel vid h√§mtning av sensordata:', error);
    //   }
    // };
    // fetchSensorData();
  }, []);

  // Sensor-konfigurationer med ikoner och beskrivningar
  const sensorTypes = [
    {
      id: "temperature-air",
      title: "Temperatur och luftkvalitet",
      description: "√ñvervakar temperatur och luftkvalitet i m√∂tesrum",
      icon: "üå°Ô∏è",
      placeholder: "Data kommer fr√•n Sensor-API...",
      location: "M√∂tesrum"
    },
    {
      id: "motion",
      title: "R√∂relsesensorer",
      description: "Detekterar r√∂relse och aktivitet i coworkingytor",
      icon: "üë•",
      placeholder: "Data kommer fr√•n Sensor-API...",
      location: "Coworkingytor"
    },
    {
      id: "power-consumption",
      title: "Elf√∂rbrukningsm√§tare",
      description: "M√§ter elf√∂rbrukning per resurs och utrustning",
      icon: "‚ö°",
      placeholder: "Data kommer fr√•n Sensor-API...",
      location: "Alla resurser"
    },
    {
      id: "ai-server",
      title: "AI-server",
      description: "√ñvervakar bokningsbara ber√§kningstj√§nster och prestanda",
      icon: "ü§ñ",
      placeholder: "Data kommer fr√•n Sensor-API...",
      location: "AI Server"
    },
    {
      id: "security",
      title: "S√§kerhetssensorer",
      description: "√ñvervakar s√§kerhet i serverhall och poddstudio",
      icon: "üîí",
      placeholder: "Data kommer fr√•n Sensor-API...",
      location: "Serverhall & Poddstudio"
    }
  ];

  return (
    <div className="iot-container">
      <header className="iot-header">
        <h1>IoT Dashboard</h1>
        <p>√ñvervaka sensorer och IoT-enheter i Innovia Hub</p>
      </header>

      <div className="iot-grid">
        {sensorTypes.map((sensor) => (
          <SensorCard
            key={sensor.id}
            title={sensor.title}
            description={sensor.description}
            icon={sensor.icon}
            placeholder={sensor.placeholder}
            location={sensor.location}
            loading={false}
          />
        ))}
      </div>

    </div>
  );
};

export default IoT;
